@model BakedRaspberryPi.Models.CheckoutDetails
@{
    ViewBag.Title = "Checkout";


    var theCart = Model.CurrentCart.WholePis;
    var subTotal = (double)theCart.Sum(x => x.Price * x.Quantity);
    var shippingAndHandling = (double)theCart.Sum(x => x.Quantity * 1.5);
    var tax = (double)(theCart.Sum(x => x.Price * x.Quantity) * 0.1025m);

    int i = 1;

    var months = (new string[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" })
        .Select(x => new SelectListItem { Text = x, Value = x });

    var years = new List<SelectListItem>();
    for (int j = 0; j < 10; j++)
    {
        years.Add(new SelectListItem
        {
            Text = (DateTime.Now.Year + j).ToString(),
            Value = (DateTime.Now.Year + j).ToString()
        });
    }

    if (User.Identity.IsAuthenticated)
    {
        Model.ContactEmail = User.Identity.Name;
    }
}

<div class="row">
    <div class="col-xs-12">
        <h2 class="textOnBackground">Checkout</h2>
    </div>
    <div class="col-xs-12 col-sm-6 assembledPiPanel">
        <table class="table">
            <thead>
                <tr>
                    <th>Item</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Item(s) Total</th>
                </tr>
            </thead>
            <tbody>

                @foreach (var wholePi in Model.CurrentCart.WholePis)
                {
                    <tr>
                        <td>
                            @("Baked Pi " + i + ":")
                        </td>
                        <td>
                            @wholePi.Quantity

                        </td>
                        <td>
                            @wholePi.Price.ToString("C")
                        </td>
                        <td>@((wholePi.Price * wholePi.Quantity).ToString("C"))</td>
                    </tr>
                    i += 1;
                }
            </tbody>
            <tfoot>
                <tr>
                    <th colspan="3">Subtotal</th>
                    <th>@subTotal.ToString("C")</th>
                </tr>
                <tr>
                    <th colspan="3">Shipping and Handling</th>
                    <th>@shippingAndHandling.ToString("C")</th>
                </tr>
                <tr>
                    <th colspan="3">Tax</th>
                    <th>@tax.ToString("C")</th>
                </tr>
                <tr>
                    <th colspan="3">Total</th>
                    <th>@((subTotal + tax + shippingAndHandling).ToString("C"))</th>
                </tr>
            </tfoot>
        </table>
    </div>

    <div class="col-xs-12 col-sm-6">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                @Html.LabelFor(m => m.ContactName, new { @class = "control-label textOnBackground" })
                @Html.TextBoxFor(m => m.ContactName, new { @class = "form-control", placeholder = "YOUR NAME" })
                @Html.ValidationMessageFor(m => m.ContactName)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ContactEmail, new { @class = "control-label textOnBackground" })
                @Html.TextBoxFor(m => m.ContactEmail, new { @class = "form-control", placeholder = "YOUR EMAIL ADDRESS" })
                @Html.ValidationMessageFor(m => m.ContactEmail)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ShippingAddress, new { @class = "control-label textOnBackground" })
                @Html.TextBoxFor(m => m.ShippingAddress, new { @class = "form-control", placeholder = "ADDRESS" })
                @Html.ValidationMessageFor(m => m.ShippingAddress)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ShippingCity, new { @class = "control-label textOnBackground" })
                @Html.TextBoxFor(m => m.ShippingCity, new { @class = "form-control", placeholder = "CITY" })
                @Html.ValidationMessageFor(m => m.ShippingCity)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ShippingState, new { @class = "control-label textOnBackground" })
                @Html.TextBoxFor(m => m.ShippingState, new { @class = "form-control", placeholder = "STATE" })
                @Html.ValidationMessageFor(m => m.ShippingState)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ShippingPostalCode, new { @class = "control-label textOnBackground" })
                @Html.TextBoxFor(m => m.ShippingPostalCode, new { @class = "form-control", placeholder = "ZIP" })
                @Html.ValidationMessageFor(m => m.ShippingPostalCode)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.CreditCardNumber, new { @class = "control-label textOnBackground" })
                @Html.TextBoxFor(m => m.CreditCardNumber, new { @class = "form-control", placeholder = "####-####-####-####" })
                @Html.ValidationMessageFor(m => m.CreditCardNumber)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.CardholderName, new { @class = "control-label textOnBackground" })
                @Html.TextBoxFor(m => m.CardholderName, new { @class = "form-control", placeholder = "NAME AS IT APPEARS ON CARD" })
                @Html.ValidationMessageFor(m => m.CardholderName)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.CVV, new { @class = "control-label textOnBackground" })
                @Html.TextBoxFor(m => m.CVV, new { @class = "form-control", placeholder = "3-DIGIT NUMBER ON BACK OF CARD" })
                @Html.ValidationMessageFor(m => m.CVV)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ExpirationMonth, new { @class = "control-label textOnBackground" })
                <div class="form-inline">
                    @Html.DropDownListFor(m => m.ExpirationMonth, months, new { @class = "form-control" })
                    @Html.DropDownListFor(m => m.ExpirationYear, years, new { @class = "form-control" })
                </div>
            </div>

            <input type="submit" class="btn btn-primary" />
        }
    </div>
</div>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
}