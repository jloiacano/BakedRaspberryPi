@model BakedRaspberryPi.Models.Cart

@{
    ViewBag.Title = "Cart Full of Pi's";

    var theCart = Model.WholePis;
    List<int> theAccessories = new List<int>();

    var subTotal = (double)theCart.Sum(x => x.Price * x.Quantity);
    var shippingAndHandling = (double)theCart.Sum(x => x.Quantity * 1.5);
    var tax = (double)(theCart.Sum(x => x.Price * x.Quantity) * 0.1025m);
    int currentAccessory;

}

@{
    if (theCart.Count == 0)
    {
        <h1>You have no Pis to bake!</h1>
    }
    else if (theCart.Count == 1)
    {
        <h1>The Pi You built!</h1>
    }
    else
    {
        <h1>The Pis you built.</h1>
    }

    using (Html.BeginForm())
    {
        @Html.HiddenFor(m => m.CartId)
        @Html.HiddenFor(j => j.WholePis)
        @Html.AntiForgeryToken()
        foreach (var wholePi in theCart)
        {
            if (wholePi.Pi != null && wholePi.Pi.Name != "" && wholePi.Pi.Name != "NONE")
            {
                <div>
                    <span>PI: </span>@wholePi.Pi.Name
                </div>
            }
            else
            {
                <div>
                    @Html.ActionLink("Add a Pi", "Index", "Pi", null, new { @class = "btn btn-primary" })
                </div>
            }

            if (wholePi.Filling != null && wholePi.Filling.Name != "" && wholePi.Filling.Name != "NONE")
            {
                <div>
                    <span>FILLING: </span>@wholePi.Filling.Name
                </div>
            }
            else
            {
                <div>
                    @Html.ActionLink("Add a Filling", "Index", "OS", null, new { @class = "btn btn-primary" })
                </div>
            }

            if (wholePi.Crust != null && wholePi.Crust.Name != "" && wholePi.Crust.Name != "NONE")
            {
                <div>
                    <span>CRUST: </span>@wholePi.Crust.Name
                </div>
            }
            else
            {
                <div>
                    @Html.ActionLink("Add A Crust", "Index", "Accessory", routeValues: new { @wholePiCrust = wholePi.Crust, @piToBeEdited = wholePi.WholePiId, @previousCrust = wholePi.Crust.PiCaseId }, htmlAttributes: new { @class = "btn btn-primary" })
                </div>
            }

            if (wholePi.ALaModes.Count != 0)
            {
                foreach (var accessory in wholePi.ALaModes)
                {
                    <div>
                        <span>A LA MODE: </span>@accessory.Name

                        @{
                            currentAccessory = accessory.AccessoryId;
                            theAccessories.Add(currentAccessory);
                        }

                    </div>
                                }
                            }
                            else
                            {
                                <div>
                                    @Html.ActionLink("Add A La Modes", "Index", "Accessory", null, new { @class = "btn btn-primary" })
                                </div>
                            }

                            <input type="number" min="1" max="10" class="form-control" value="@wholePi.Quantity" name="@("wholePi[" + wholePi.WholePiId.ToString() +"].Quantity" )"        />
                            <!--TODO : GET THE NAME OF THE ABOVE INPUT WORKING CORRECTLY.-->

                            @Html.ActionLink("EditPiTrial", "Edit", "Pi",
           routeValues: new { @wholePiPi = wholePi, @wholePiToBeEditedId = wholePi.WholePiId, @previousPiBoard = wholePi.Pi.PiId },
           htmlAttributes: new { @class = "btn btn-default" })

                            @Html.ActionLink("EditOSTrial", "Edit", "OS",
           routeValues: new { @wholePiPi = wholePi, @wholePiToBeEditedId = wholePi.WholePiId, @previousOs = wholePi.Filling.OSId },
           htmlAttributes: new { @class = "btn btn-default" })

                            @Html.ActionLink("EditAccessoriesTrial", "EditAccessories", "Accessory",
           routeValues: new { @wholePiPi = wholePi, @wholePiToBeEditedId = wholePi.WholePiId, @previousAccessoriesIds = string.Join(",", theAccessories) },
           htmlAttributes: new { @class = "btn btn-default" })

                            @Html.ActionLink("EditCaseTrial", "EditCases", "Accessory",
           routeValues: new { @WholePiPi = wholePi, @wholePiToBeEditedId = wholePi.WholePiId, @previousPiCaseId = wholePi.Crust.PiCaseId },
           htmlAttributes: new { @class = "btn btn-default" })

                            @Html.ActionLink("Remove", "Remove", "Cart",
           routeValues: new { @toBeRemoved = wholePi.WholePiId, @theCartId = Model.CartId },
           htmlAttributes: new { @class = "btn btn-primary" })

                            <div>
                                @wholePi.Price
                            </div>
                            <hr />
                            @Html.ActionLink("Add Another Baked Pi", "AddAnotherWholePi", "Cart",
           routeValues: new { @theCartId = Model.CartId },
           htmlAttributes: new { @class = "btn btn-primary" })


        <input type="submit" value="Change Quantity" class="btn btn-danger" />
                            }
                            <div>
                                <span>SUBTOTAL: </span>@subTotal.ToString("C")
                            </div>
                            <div>
                                <span>S&H: </span>@shippingAndHandling.ToString("C")
                            </div>
                            <div>
                                <span>TAX: </span>@tax.ToString("C")
                            </div>
                            <div>
                                <span>TOTAL: </span>@((tax + subTotal + shippingAndHandling).ToString("C"))
                            </div>
                            @Html.ActionLink("Check Out", "Index", "Checkout", null, new { @class = "btn btn-primary" })
                            }
}