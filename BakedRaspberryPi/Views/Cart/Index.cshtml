@model BakedRaspberryPi.Models.Cart

@{
    ViewBag.Title = "Cart Full of Pi's";

    var theCart = Model.WholePis;
    List<int> theAccessories = new List<int>();

    var subTotal = theCart.Sum(x => x.Price * x.Quantity);
    var shippingAndHandling = theCart.Sum(x => x.Quantity * 1.5);
    var tax = theCart.Sum(x => x.Price * x.Quantity) * 0.1025m;

}

@{ 
    if (theCart.Count == 0)
    {
        <h1>You have no Pis to bake!</h1>
    }
    else if (theCart.Count == 1)
    {
        <h1>The Pi You built!</h1>
    }
    else
    {
        <h1>The Pis you built.</h1>
    }

    using (Html.BeginForm())
    {
        foreach (var wholePi in theCart)
        {
            if (wholePi.Pi != null && wholePi.Pi.Name != "" && wholePi.Pi.Name != "NONE")
            {
            <div>
                <span>PI: </span>@wholePi.Pi.Name
            </div>
            }
            else
            {
            <div>
                @Html.ActionLink("Add a Pi", "Index", "Pi", null, new { @class = "btn btn-primary" })
            </div>
            }

            if (wholePi.Filling != null && wholePi.Filling.Name != "" && wholePi.Filling.Name != "NONE")
            {
            <div>
                <span>FILLING: </span>@wholePi.Filling.Name
            </div>
            }
            else
            {
            <div>
                @Html.ActionLink("Add a Filling", "Index", "OS", null, new { @class = "btn btn-primary" })
            </div>
            }

            if (wholePi.Crust != null && wholePi.Crust.Name != "" && wholePi.Crust.Name != "NONE")
            {
            <div>
                <span>CRUST: </span>@wholePi.Crust.Name
            </div>
            }
            else
            {
            <div>
                @Html.ActionLink("Add A Crust", "Index", "Accessory", protocol: null, hostName: null, fragment: "picases", routeValues:
               new { @wholePiCrust = wholePi.Crust, @piToBeEdited = wholePi.WholePiId, @previousCrust = wholePi.Crust.PiCaseId }, htmlAttributes: new { @class = "btn btn-primary" })
            </div>
            }

            if (wholePi.ALaModes.Count != 0)
            {
                foreach (var accessory in wholePi.ALaModes)
                {
                <div>
                    <span>A LA MODE: </span>@accessory.Name
                    @{
                        int currentAccessory = accessory.AccessoryId;
                        theAccessories.Add(currentAccessory);
                    }
                </div>
                }
            }
            else
            {
            <div>
                @Html.ActionLink("Add A La Modes", "Index", "Accessory", null, new { @class = "btn btn-primary" })
            </div>
            }

            <input type="number" min="1" max="10" class="form-control" value="@wholePi.Quantity" name="@("wholePi[" + wholePi.WholePiId + "].Quantity")" />
            
            @Html.ActionLink("EditPiTrial", "Edit", "Pi",
           routeValues: new { @wholePiPi = wholePi, @wholePiToBeEditedId = wholePi.WholePiId, @previousPiBoard = wholePi.Pi.PiId },
           htmlAttributes: new { @class = "btn btn-default" })

            @Html.ActionLink("EditOSTrial", "Edit", "OS",
           routeValues: new { @wholePiPi = wholePi, @wholePiToBeEditedId = wholePi.WholePiId, @previousOs = wholePi.Filling.OSId },
           htmlAttributes: new { @class = "btn btn-default" })

            @Html.ActionLink("EditAccessoriesTrial", "EditAccessories", "Accessory",
           routeValues: new { @wholePiPi = wholePi, @wholePiToBeEditedId = wholePi.WholePiId, @previousAccessoriesIds = string.Join(",", theAccessories) },
           htmlAttributes: new { @class = "btn btn-default" })

            @Html.ActionLink("EditCaseTrial", "EditCases", "Accessory",
           routeValues: new { @WholePiPi = wholePi, @wholePiToBeEditedId = wholePi.WholePiId, @previousPiCaseId = wholePi.Crust.PiCaseId },
           htmlAttributes: new { @class = "btn btn-default" })

            @Html.ActionLink("Remove", "Index", "Cart", null, new { @class = "btn btn-primary" })

        <div>
            @wholePi.Price
        </div>
        <hr />
                            }
                        }
                        <div>
                            <span>SUBTOTAL: </span>@subTotal
                        </div>
                        <div>
                            <span>S&H: </span>@shippingAndHandling
                        </div>
                        <div>
                            <span>TAX: </span>@tax
                        </div>
                        <div>
                            <span>TOTAL: </span>@(tax + subTotal + (decimal)shippingAndHandling)
                        </div>
}

