@model BakedRaspberryPi.Models.Cart

@{
    ViewBag.Title = "Cart Full of Pi's";

    var theCart = Model.WholePis;

    var subTotal = (double)theCart.Sum(x => x.Price * x.Quantity);
    var shippingAndHandling = (double)theCart.Sum(x => x.Quantity * 1.5);
    var tax = (double)(theCart.Sum(x => x.Price * x.Quantity) * 0.1025m);
    int i = -1;

}

@{
    if (theCart.Count == 0)
    {
        <h1>You have no Pis to bake!</h1>
    }
    else if (theCart.Count == 1)
    {
        <h1>The Pi You built!</h1>
    }
    else
    {
        <h1>The Pis you built.</h1>
    }

    using (Html.BeginForm())
    {
        @Html.HiddenFor(m => m.CartId)
        
        @Html.AntiForgeryToken()
        foreach (var wholePi in theCart)
        {
            i += 1;
            
            if (wholePi.Pi != null && (!(Object.ReferenceEquals(null, wholePi.Pi.Name))) && wholePi.Pi.Name != "" && wholePi.Pi.Name != "NONE")
            {
                <div>
                    <span>PI: </span>@wholePi.Pi.Name
                </div>
            }
            else
            {
                <div>
                    @Html.ActionLink("Add a Pi", "Index", "Pi", null, new { @class = "btn btn-primary" })
                </div>
            }

            if (wholePi.Filling != null && (!(Object.ReferenceEquals(null, wholePi.Filling.Name))) && wholePi.Filling.Name != "" && wholePi.Filling.Name != "NONE")
            {
                <div>
                    <span>FILLING: </span>@wholePi.Filling.Name
                </div>
            }
            else
            {
                <div>
                    @Html.ActionLink("Add a Filling", "Index", "OS", null, new { @class = "btn btn-primary" })
                </div>
            }

            if (wholePi.Crust != null && (!(Object.ReferenceEquals(null, wholePi.Crust.Name))) && wholePi.Crust.Name != "" && wholePi.Crust.Name != "NONE")
            {
                <div>
                    <span>CRUST: </span>@wholePi.Crust.Name
                </div>
            }
            else
            {
                <div>
                    @Html.ActionLink("Add A Crust", "Index", "Accessory", routeValues: new { @wholePiCrust = wholePi.Crust, @piToBeEdited = wholePi.WholePiId, @previousCrust = wholePi.Crust.PiCaseId }, htmlAttributes: new { @class = "btn btn-primary" })
                </div>
            }

            if (wholePi.ALaModes.Count != 0)
            {
                foreach (var accessory in wholePi.ALaModes)
                {
                    <div>
                        <span>A LA MODE: </span>@accessory.Name

                    </div>
                }
            }
            else
            {
                <div>
                    @Html.ActionLink("Add A La Modes", "Index", "Accessory", null, new { @class = "btn btn-primary" })
                </div>
            }
            
                <input type="hidden" value="@wholePi.WholePiId" name="@("WholePis[" + i + "].WholePiId")" />
                <input type="number" min="1" max="10" class="form-control" value="@wholePi.Quantity" name="@("WholePis[" + i + "].Quantity" )" />
                <!--NOTE TO SELF: Keep in mind naming convention of "name=" so that the post will send the model correctly to the Post funtion.-->
           
                            @Html.ActionLink("Update Quantities (seperate function)", "UpdateQuantities", "Cart",
                           routeValues: new { @wholePiToBeUpdated = wholePi.WholePiId, @theCartId = Model.CartId },
                           htmlAttributes: new { @class = "btn btn-danger" })

                            @Html.ActionLink("EditPiTrial", "Edit", "Pi",
                    routeValues: new { @wholePiPi = wholePi, @wholePiToBeEditedId = wholePi.WholePiId, @previousPiBoard = wholePi.Pi.PiId },
                    htmlAttributes: new { @class = "btn btn-default" })

                            @Html.ActionLink("EditOSTrial", "Edit", "OS",
                    routeValues: new { @wholePiPi = wholePi, @wholePiToBeEditedId = wholePi.WholePiId, @previousOs = wholePi.Filling.OSId },
                    htmlAttributes: new { @class = "btn btn-default" })

                            @Html.ActionLink("EditAccessoriesTrial", "EditAccessories", "Accessory",
                    routeValues: new { @wholePiPi = wholePi, @wholePiToBeEditedId = wholePi.WholePiId, @previousAccessoriesIds = string.Join(",", wholePi.ALaModes.Select(x => x.AccessoryId)) },
                    htmlAttributes: new { @class = "btn btn-default" })

                            @Html.ActionLink("EditCaseTrial", "EditCases", "Accessory",
                    routeValues: new { @WholePiPi = wholePi, @wholePiToBeEditedId = wholePi.WholePiId, @previousPiCaseId = wholePi.Crust.PiCaseId },
                    htmlAttributes: new { @class = "btn btn-default" })

                            @Html.ActionLink("Remove", "Remove", "Cart",
                    routeValues: new { @toBeRemoved = wholePi.WholePiId, @theCartId = Model.CartId },
                    htmlAttributes: new { @class = "btn btn-primary" })

                            <div>
                                @wholePi.Price
                            </div>
                            <hr />
        }

        <div>
            @Html.ActionLink("Add Another Baked Pi", "AddAnotherWholePi", "Cart",
           routeValues: new { @theCartId = Model.CartId },
           htmlAttributes: new { @class = "btn btn-primary" })


            <input type="submit" value="Update Quantities" class="btn btn-danger" />
        </div>
    }
    <div>
        <span>SUBTOTAL: </span>@subTotal.ToString("C")
    </div>
                            <div>
                                <span>S&H: </span>@shippingAndHandling.ToString("C")
                            </div>
                            <div>
                                <span>TAX: </span>@tax.ToString("C")
                            </div>
                            <div>
                                <span>TOTAL: </span>@((tax + subTotal + shippingAndHandling).ToString("C"))
                            </div>
                            @Html.ActionLink("Check Out", "Index", "Checkout", null, new { @class = "btn btn-primary" })
}