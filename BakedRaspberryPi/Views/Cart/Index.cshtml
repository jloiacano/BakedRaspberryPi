@model BakedRaspberryPi.Models.Cart

@{
    ViewBag.Title = "Cart Full of Pi's";
    var theCart = Model.WholePis;
    var subTotal = (double)theCart.Sum(x => x.Price * x.Quantity);
    var shippingAndHandling = (double)theCart.Sum(x => x.Quantity * 1.5);
    var tax = (double)(theCart.Sum(x => x.Price * x.Quantity) * 0.1025m);
    int i = -1;
}

<div class="row">
    <div class="col-md-8">
        @if (theCart.Count == 0)
        {
            <h1 class="textOnBackground">You have no Pis to bake!</h1>
        }
        else if (theCart.Count == 1)
        {
            <h1 class="textOnBackground">The Pi You built!</h1>
        }
        else
        {
            <h1 class="textOnBackground">The Pis you built.</h1>
        }

        @using (Html.BeginForm())
        {
            @Html.HiddenFor(m => m.CartId)
            @Html.AntiForgeryToken()
            foreach (var wholePi in theCart)
            {
                i += 1;
                <div class="assembledPiPanel">
                    <table>                        
                        <!-- PI -->
                        @if (wholePi.Pi != null && (!(Object.ReferenceEquals(null, wholePi.Pi.Name))) && wholePi.Pi.Name != "NONE")
                        {
                            <tr>
                                <td>@Html.ActionLink("Edit Pi", "Edit", "Pi",
                              routeValues: new { @wholePiPi = wholePi, @wholePiToBeEditedId = wholePi.WholePiId, @previousPiBoard = wholePi.Pi.PiId },
                              htmlAttributes: new { @class = "btn btn-danger" })
                                </td>
                                <td><span class="assembledPiPanelText assembledPiPiName">Pi: @wholePi.Pi.Name</span></td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td></td>
                                <td>@Html.ActionLink("Add a Pi", "Index", "Pi", routeValues: null, htmlAttributes: new { @class = "btn btn-primary" })</td>
                            </tr>
                        }
                        <!-- OS -->
                        @if (wholePi.Filling != null && (!(Object.ReferenceEquals(null, wholePi.Filling.Name))) && wholePi.Filling.Name != "NONE")
                        {
                            <tr>
                                <td>@Html.ActionLink("Edit OS", "Edit", "OS",
                              routeValues: new { @wholePiPi = wholePi, @wholePiToBeEditedId = wholePi.WholePiId, @previousOs = wholePi.Filling.OSId },
                              htmlAttributes: new { @class = "btn btn-danger" })
                                </td>
                                <td><span class="assembledPiPanelText assembledOSPiName">Filling: @wholePi.Filling.Name</span></td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td></td>
                                <td>@Html.ActionLink("Add a Filling", "Index", "OS", null, new { @class = "btn btn-primary" })</td>
                            </tr>
                        }
                        <!-- CASE -->
                        @if (wholePi.Crust != null && (!(Object.ReferenceEquals(null, wholePi.Crust.Name))) && wholePi.Crust.Name != "NONE")
                        {
                            <tr>
                                <td>@Html.ActionLink("Edit Case", "EditCases", "Accessory",
                              routeValues: new { @WholePiPi = wholePi, @wholePiToBeEditedId = wholePi.WholePiId, @previousPiCaseId = wholePi.Crust.PiCaseId },
                              htmlAttributes: new { @class = "btn btn-danger" })
                                </td>
                                <td><span class="assembledPiPanelText assembledCasePiName">Crust: @wholePi.Crust.Name</span></td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td></td>
                                <td>@Html.ActionLink("Add A Crust", "Index", "Accessory", 
                                   routeValues: new { @wholePiCrust = wholePi.Crust, @piToBeEdited = wholePi.WholePiId, @previousCrust = wholePi.Crust.PiCaseId }, 
                                   htmlAttributes: new { @class = "btn btn-primary" })
                                </td>
                            </tr>
                        }
                        <!-- ACCESSORIES -->
                        @if (wholePi.ALaModes.Count != 0)
                        {
                            var aLaModeNumber = 1;
                            foreach (var alamode in wholePi.ALaModes)
                            {
                                if (aLaModeNumber == 1)
                                {
                                    <tr>
                                        <td>
                                            @Html.ActionLink("Edit Accessories", "EditAccessories", "Accessory",
                              routeValues: new { @wholePiPi = wholePi, @wholePiToBeEditedId = wholePi.WholePiId, @previousAccessoriesIds = string.Join(",", wholePi.ALaModes.Select(x => x.AccessoryId)) },
                              htmlAttributes: new { @class = "btn btn-danger" })
                                        </td>
                                        <td><span class="assembledPiPanelText assembledPiALaModeName">A La Mode @aLaModeNumber: @alamode.Name</span></td>
                                    </tr>
                                }
                                else
                                {
                                    <tr>
                                        <td></td>
                                        <td><span class="assembledPiPanelText assembledPiALaModeName">A La Mode @aLaModeNumber: @alamode.Name</span></td>
                                    </tr>
                                }
                                aLaModeNumber += 1;
                            }
                        }
                        else
                        {
                            <tr>
                                <td></td>
                                <td>@Html.ActionLink("Add A La Modes", "Index", "Accessory", null, new { @class = "btn btn-primary" })</td>
                            </tr>
                        }
                        <!-- quantity input -->
                        <tr>
                            <td colspan="3">
                                <input type="hidden" value="@wholePi.WholePiId" name="@("WholePis[" + i + "].WholePiId")" />
                                <input type="number" min="1" max="10" class="form-control" value="@wholePi.Quantity" name="@("WholePis[" + i + "].Quantity")" />
                            </td>
                        </tr>
                        <!-- REMOVE / TOTAL -->
                        <tr>
                            <td>
                                @Html.ActionLink("Remove", "Remove", "Cart",
                              routeValues: new { @toBeRemoved = wholePi.WholePiId, @theCartId = Model.CartId },
                              htmlAttributes: new { @class = "btn btn-primary" })
                            </td>
                            <td><span class="assembledPiPanelText assembledPiPrice">Price: @wholePi.Price</span></td>
                        </tr>
                    </table>
                </div>
            }
        }
        <div>
                @Html.ActionLink("Add Another Baked Pi", "AddAnotherWholePi", "Cart",
           routeValues: new { @theCartId = Model.CartId },
           htmlAttributes: new { @class = "btn btn-primary" })


                <input type="submit" value="Update Quantities" class="btn btn-danger" />
            </div>
        </div>
    <div class="col-md-4">
                <div>
                    <span>SUBTOTAL: </span>@subTotal.ToString("C")
                </div>
                <div>
                    <span>S&H: </span>@shippingAndHandling.ToString("C")
                </div>
                <div>
                    <span>TAX: </span>@tax.ToString("C")
                </div>
                <div>
                    <span>TOTAL: </span>@((tax + subTotal + shippingAndHandling).ToString("C"))
                </div>
                @Html.ActionLink("Check Out", "Index", "Checkout", routeValues: null, htmlAttributes: new { @class = "btn btn-primary" })
        </div>
</div>
