@model BakedRaspberryPi.Models.Cart

@{
    ViewBag.Title = "Cart Full of Pi's";
    var theCart = Model.WholePis;
    var subTotal = (double)theCart.Sum(x => x.Price * x.Quantity);
    var shippingAndHandling = (double)theCart.Sum(x => x.Quantity * 1.5);
    var tax = (double)(theCart.Sum(x => x.Price * x.Quantity) * 0.1025m);
    int i = -1;
    EditButtonHelperService makeStuff = new EditButtonHelperService();
}

        @if (theCart.Count == 0)
        {
            <h1 class="textOnBackground">You have no Pis to bake!</h1>
        }
        else if (theCart.Count == 1)
        {
            <h1 class="textOnBackground">The Pi You built!</h1>
        }
        else
        {
            <h1 class="textOnBackground">The Pis you built.</h1>
        }

        <div class="row">
            <div class="col-md-8">
                @using (Html.BeginForm())
                {
                    @Html.HiddenFor(m => m.CartId)
                    @Html.AntiForgeryToken()
                    foreach (var wholePi in theCart)
                    {
                        i += 1;
                        <div class="assembledPiPanel">
                            <table>
                                <!-- PI -->
                                @if (wholePi.Pi != null && (!(Object.ReferenceEquals(null, wholePi.Pi.Name))) && wholePi.Pi.Name != "NONE")
                                {
                                    <tr>
                                        <td>
                                            @Html.Raw(makeStuff.MakeACartEditButton("danger", "Pi", wholePi, wholePi.WholePiId, wholePi.Pi.PiId, "Edit Pi" ))
                                        </td>
                                        <td><span class="assembledPiPanelText assembledPiPiName">Pi: @wholePi.Pi.Name</span></td>
                                    </tr>
                                }
                                else
                                {
                                    <tr>
                                        <td></td>
                                        <td>
                                            @Html.Raw(makeStuff.MakeACartEditButton("primary", "Pi", wholePi, wholePi.WholePiId, null, "Add A Pi"))
                                        </td>
                                    </tr>
                                }
                                <!-- OS -->
                                @if (wholePi.Pi == null || (Object.ReferenceEquals(null, wholePi.Pi.Name)) || wholePi.Pi.Name == "NONE")
                                {
                                <tr>
                                    <td></td>
                                    <td>
                                        @Html.Raw(makeStuff.MakeACartEditButton("primary\" disabled = \"disabled", "OS", wholePi, wholePi.WholePiId, null, "Add Some Filling"))
                                    </td>
                                </tr>
                                }
                                else if (wholePi.Filling != null && (!(Object.ReferenceEquals(null, wholePi.Filling.Name))) && wholePi.Filling.Name != "NONE")
                                {
                                    <tr>
                                        <td>
                                            @Html.Raw(makeStuff.MakeACartEditButton("danger", "OS", wholePi, wholePi.WholePiId, wholePi.Filling.OSId, "Edit Filling"))
                                        </td>
                                        <td>
                                            <span class="assembledPiPanelText assembledOSPiName">Filling: @wholePi.Filling.Name</span>
                                        </td>
                                    </tr>
                                }
                                else
                                {
                                    <tr>
                                        <td></td>
                                        <td>
                                            @Html.Raw(makeStuff.MakeACartEditButton("primary", "OS", wholePi, wholePi.WholePiId, null, "Add Some Filling"))
                                        </td>
                                    </tr>
                                }
                                <!-- CASE -->
                                @if (wholePi.Crust != null && (!(Object.ReferenceEquals(null, wholePi.Crust.Name))) && wholePi.Crust.Name != "NONE")
                                {
                                    <tr>
                                        <td>
                                            @Html.Raw(makeStuff.MakeACartEditButton("danger", "Accessory", wholePi, wholePi.WholePiId, wholePi.Crust.PiCaseId, "Edit Crust"))
                                        </td>
                                        <td><span class="assembledPiPanelText assembledCasePiName">Crust: @wholePi.Crust.Name</span></td>
                                    </tr>
                                }
                                else
                                {
                                    <tr>
                                        <td></td>
                                        <td>
                                            @Html.Raw(makeStuff.MakeACartEditButton("primary", "Accessory", "Edit", wholePi, wholePi.WholePiId, null, "Add a Crust"))
                                        </td>
                                    </tr>
                                }
                                <!-- ACCESSORIES -->
                                @if (wholePi.ALaModes.Count != 0 && Object.ReferenceEquals(null, wholePi.ALaModes.FirstOrDefault(x => x.Name == "NONE")))
                                {
                                    var aLaModeNumber = 1;
                                    foreach (var alamode in wholePi.ALaModes)
                                    {
                                        if (aLaModeNumber == 1)
                                        {
                                            <tr>
                                                <td>
                                                    @Html.Raw(makeStuff.MakeACartEditButton("danger", "Accessory", "EditAccessories", wholePi, wholePi.WholePiId, (string.Join(",", wholePi.ALaModes.Select(x => x.AccessoryId))), "Edit A La Modes"))                                                    
                                                </td>
                                                <td><span class="assembledPiPanelText assembledPiALaModeName">A La Mode @aLaModeNumber: @alamode.Name</span></td>
                                            </tr>
                                        }
                                        else
                                        {
                                            <tr>
                                                <td></td>
                                                <td><span class="assembledPiPanelText assembledPiALaModeName">A La Mode @aLaModeNumber: @alamode.Name</span></td>
                                            </tr>
                                        }
                                        aLaModeNumber += 1;
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td></td>
                                        <td>
                                            @Html.Raw(makeStuff.MakeACartEditButton("primary", "Accessory", "EditAccessories", wholePi, wholePi.WholePiId, null, "Add A La Modes"))
                                        </td>
                                    </tr>
                                }
                                <!-- price display-->
                                <tr>
                                    <td>
                                        <span>Assembled Price:</span>
                                    </td>
                                    <td>
                                        @wholePi.Price
                                    </td>
                                </tr>
                                <!-- quantity input -->
                                <tr>
                                    <td>
                                        <input type="submit" value="Quantity:" class="btn btn-danger" />
                                    </td>
                                    <td>
                                        <input type="hidden" value="@wholePi.WholePiId" name="@("WholePis[" + i + "].WholePiId")" />
                                        <input type="number" min="1" max="10" class="form-control cartQuantitytableDisplay" value="@wholePi.Quantity" name="@("WholePis[" + i + "].Quantity")" />
                                        <input type="submit" value="Update" class="btn btn-primary cartQuantitytableDisplay" />
                                    </td>
                                </tr>
                                <!-- REMOVE / TOTAL -->
                                <tr>
                                    <td>
                                        @Html.ActionLink("Remove", "Remove", "Cart",
                              routeValues: new { @toBeRemoved = wholePi.WholePiId, @theCartId = Model.CartId },
                              htmlAttributes: new { @class = "btn btn-primary" })
                                    </td>
                                    <td><span class="assembledPiPanelText assembledPiPrice">Price: @(wholePi.Price * wholePi.Quantity)</span></td>
                                </tr>
                            </table>
                        </div>
                    }
                    <div>
                        @Html.ActionLink("Add Another Baked Pi", "AddAnotherWholePi", "Cart",
           routeValues: new { @theCartId = Model.CartId },
           htmlAttributes: new { @class = "btn btn-primary" })


                        <input type="submit" value="Update Quantities" class="btn btn-danger" />
                    </div>
                }
            </div>
    <div class="col-md-4 assembledPiPanel assembledPiPanelText">
                <div>
                    <span>SUBTOTAL: </span>@subTotal.ToString("C")
                </div>
                <div>
                    <span>S&H: </span>@shippingAndHandling.ToString("C")
                </div>
                <div>
                    <span>TAX: </span>@tax.ToString("C")
                </div>
                <div>
                    <span>TOTAL: </span>@((tax + subTotal + shippingAndHandling).ToString("C"))
                </div>
                @Html.ActionLink("Check Out", "Index", "Checkout", routeValues: null, htmlAttributes: new { @class = "btn btn-primary" })
        </div>
</div>
